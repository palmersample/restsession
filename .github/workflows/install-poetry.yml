name: Install Poetry and create the venv
on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      poetry-version:
        required: true
        type: string
    outputs:
      poetry-cache-key:
        description: Key for Poetry GitHub cache
        value: ${{ jobs.setup.outputs.poetry-cache-key }}

jobs:
  build:
    name: Install Poetry
    runs-on: ubuntu-latest
    outputs:
      poetry-cache-key: ${{ steps.set-poetry-cache-key.outputs.poetry-cache-key }}
    steps:
      - name: Define cache keys for other jobs
        id: set-poetry-cache-key
        run: |
          echo "poetry-cache-key=poetry${{ inputs.poetry-version }}-python${{ inputs.python-version }}-${{ runner.os }}" >> $GITHUB_OUTPUT

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ inputs.python-version }}

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: ${{ steps.set-poetry-cache-key.outputs.poetry-cache-key }}

      - name: Install Poetry ${{ inputs.poetry-version }}
        uses: snok/install-poetry@v1
        if: steps.cached-poetry.outputs.cache-hit != true
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: false
