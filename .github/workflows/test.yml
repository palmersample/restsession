name: Test code functionality
on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      cached-venv-key:
        required: true
        type: string
      build-wheel-name:
        required: true
        type: string

jobs:
  test:
    name: Perform all code tests
    runs-on: ubuntu-latest
    steps:
      - name: Pull the tests directory from the repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: 'tests'
          sparse-checkout-cone-mode: false

      - name: Load cached environment
        uses: actions/cache@v4
        id: cached-poetry-venv
        with:
          path: .venv
          key: ${{ inputs.cached-venv-key }}

      - name: Activate venv for all tasks
        run: |
          echo "PATH=${GITHUB_WORKSPACE}/.venv/bin:$PATH" >> $GITHUB_ENV
          echo "VIRTUAL_ENV=${GITHUB_WORKSPACE}/.venv" >> $GITHUB_ENV
          which python
          which pip

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{ runner.os }}-${{ inputs.python-version }}

      - name: Install the built wheel
        run: |
          source .venv/bin/activate
          pip install ${{ inputs.build-wheel-name }}

      - name: Prepare pytest cache
        uses: actions/cache@v4
        id: pytest-cache
        with:
          path: .pytest_cache
          key: pytest-${{ runner.os }}-${{ inputs.python-version }}-${{ inputs.build-wheel-name }}

      - name: Run failed pytest results
        run: pytest --lf
        if: steps.pytest-cache.outputs.cache-hit == 'true'

      - name: Clear pytest cache for new builds
        run: pytest --cache-clear
        if: steps.pytest-cache.outputs.cache-hit != 'true'
