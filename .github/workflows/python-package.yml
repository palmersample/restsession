# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
---
name: Python package

on:
  push:
    branches: ["main"]
  pull_request:
    # branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Where is poetry installed?
        run: |
          which poetry
          poetry --version

      - name: Load cached venv
        uses: actions/cache@v4
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root --with test
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: What's in local?
        run: |
          ls -alR .cache/pypoetry


#      - name: Install library
#        run: poetry install --no-interaction

      - name: Lint all source files
        run: |
          source .venv/bin/activate
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          # OPTIONAL - Report any recommendations from black
          # black . --check

      - name: Test with pytest
        run: |
          source .venv/bin/activate
          pytest --doctest-modules --html=tests/logs/pytest-log.html --self-contained-html -v tests
