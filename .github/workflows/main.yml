---
name: Workflow entrypoint

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  setup:
    name: Set environment variables for workflows
    runs-on: ubuntu-latest
    outputs:
      dev-python-version: ${{ steps.set-output-variables.outputs.dev-python-version }}
      poetry-version: ${{ steps.set-output-variables.outputs.poetry-version }}
    steps:
      - name: Set output variables
        id: set-output-variables
        run: |
          echo "dev-python-version=3.12" >> $GITHUB_OUTPUT
          echo "poetry-version=2.1.3" >> $GITHUB_OUTPUT

  linting:
    uses: ./.github/workflows/linting.yml
    needs:
      - setup
    with:
      python-version: ${{ needs.setup.outputs.dev-python-version }}

  build:
    uses: ./.github/workflows/build.yml
    needs:
      - setup
      - linting
    with:
      poetry-version: ${{ needs.setup.outputs.poetry-version }}
      python-version: ${{ needs.setup.outputs.dev-python-version }}

  deploy-testing:
    name: Upload wheel to TestPyPi
    runs-on: ubuntu-latest
    needs:
      - build
    environment:
      name: devtest
      url: https://test.pypi.org/p/restsession
    permissions:
      id-token: write
    steps:
      - name: Download wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: build-python3-${{ runner.os }}
          path: dist

      - name: Upload wheel to TestPyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  python-venv:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    needs:
      - build
    uses: ./.github/workflows/python-venv-jobs.yml
    with:
      python-version: ${{ matrix.python-version }}
      cached-venv-key: ${{ needs.build.outputs.cached-venv-key }}
      build-wheel-name: ${{ needs.build.outputs.build-wheel-name }}
