name: Create testing environment
on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      poetry-version:
        required: true
        type: string
    outputs:
      cached-venv-key:
        description: Cache key for venv created by Poetry
        value: ${{ jobs.env-build.outputs.venv-cache-key }}

jobs:
  env-build:
    name: Build version-specific testing environment
    runs-on: ubuntu-latest
    outputs:
      venv-cache-key: ${{ steps.venv-cache-key.outputs.venv-cache-key }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ inputs.python-version }}

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ inputs.poetry-version }}

      - name: Set cache key for output
        id: venv-cache-key
        run: |
          echo "venv-cache-key=venv-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/poetry.lock') }}" >> $GITHUB_OUTPUT

      - name: Load cached venv
        uses: actions/cache@v4
        id: cached-poetry-venv
        with:
          path: .venv
          key: ${{ steps.venv-cache-key.outputs.venv-cache-key }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root --with test
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
